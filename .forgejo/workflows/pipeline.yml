name: Test
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  HOMEBREW_NO_INSTALL_UPGRADE: 1
  HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
  build:
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        secrets:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - run: just build-release
      - run: just build-debug
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload binaries
        with:
          name: target
          path: target


  lint:
    runs-on: docker
    needs:
      - build
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        secrets:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        with:
          path: target
          pattern: target
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - run: just lint

  unit-test:
    needs:
      - build
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        secrets:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        with:
          path: target
          pattern: target
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
      - run: just test

  integration-test:
    needs:
      - build
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        secrets:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - run: command -v specdown >/dev/null 2>&1 || cargo install specdown --git https://github.com/specdown/specdown.git
        name: Install specdown
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
      - run: |
          apt-get update
          apt-get install -y socat
        name: apt-get install -y socat
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        with:
          path: target
          pattern: target
      - run: just specdown

  bake-edge-test:
    runs-on: docker
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      - run: echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta-without-version
        uses: https://code.forgejo.org/docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Bake Docker (without version)
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        with:
          set: |
            docker.args.VER=0.1.0
          push: false
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: docker
      - name: Bake Bins (without version)
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        env:
          GPG_PRIVATE_KEY: ""
          GPG_PASSPHRASE: ""
        with:
          set: |
            bins*.args.VER=${{ needs.release.outputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: bins
      - shell: bash
        name: "Flatten filenames"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete

  release:
    if: github.ref == 'refs/heads/main'
    needs:
      - unit-test
      - integration-test
      - lint
      - bake-edge-test
    outputs:
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@main
        with:
          token: ${{ secrets.FJ_TOKEN }}
          fetch-depth: 0
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        secrets:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Get tags
        run: git fetch --tags origin
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - id: previous_version
        run: |
          cog get-version | tee .version
          echo "previous_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash
      - name: Semver release
        id: release
        run: |
          git config --global user.name "cog-bot"
          git config --global user.email "cog@example.com"
          cog bump --auto --skip-ci
      - id: current_version
        run: |
          cog get-version | tee .version
          echo "current_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash

  bake-edge-build:
    if: needs.release.outputs.current_version == needs.release.outputs.previous_version
    runs-on: docker
    needs:
      - release
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@v4
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: https://code.forgejo.org/docker/login-action@v3
        with:
          registry: codeberg.org
          username: ${{ github.actor }}
          password: ${{ secrets.FJ_TOKEN }}
      - run: echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta-without-version
        uses: https://code.forgejo.org/docker/metadata-action@v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Bake Docker (without version)
        uses: https://code.forgejo.org/docker/bake-action@v4
        with:
          set: |
            docker.args.VER=${{ needs.release.outputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: docker
      - name: Bake Bins (without version)
        uses: https://code.forgejo.org/docker/bake-action@v4
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          set: |
            bins*.args.VER=${{ needs.release.outputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: bins
      - shell: bash
        name: "Flatten filenames"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete
      - uses: https://code.forgejo.org/forgejo/upload-artifact@v4
        name: Upload binaries
        with:
          name: built-bins
          path: target/bins/

  bake-release-build:
    if: needs.release.outputs.current_version != needs.release.outputs.previous_version
    needs:
      - release
    runs-on: docker
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@v4
        with:
          token: ${{ secrets.FJ_TOKEN }}
          ref: v${{ needs.release.outputs.current_version }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: https://code.forgejo.org/docker/login-action@v3
        with:
          registry: codeberg.org
          username: ${{ github.actor }}
          password: ${{ secrets.FJ_TOKEN }}
      - run: echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract versioned metadata (tags, labels) for Docker
        id: meta-with-version
        uses: https://code.forgejo.org/docker/metadata-action@v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest
            type=semver,pattern={{version}},value=v${{ needs.release.outputs.current_version }},prefix=v
            type=semver,pattern={{version}},value=v${{ needs.release.outputs.current_version }}
            type=sha
      - name: Bake Docker (with version)
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        with:
          set: |
            docker.args.VER=${{ needs.release.outputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-with-version.outputs.bake-file-tags }}
            ${{ steps.meta-with-version.outputs.bake-file-annotations }}
            ${{ steps.meta-with-version.outputs.bake-file-labels }}
          targets: docker
      - name: Bake Bins (with version)
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          set: |
            bins*.args.VER=${{ needs.release.outputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-with-version.outputs.bake-file-tags }}
            ${{ steps.meta-with-version.outputs.bake-file-annotations }}
            ${{ steps.meta-with-version.outputs.bake-file-labels }}
          targets: bins
      - shell: bash
        name: "Flatten filenames"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload binaries
        with:
          name: built-bins
          path: target/bins/
      - run: cog changelog --at "$TAG_V" > CHANGELOG.md
        shell: bash
        env:
          TAG_V: v${{ needs.release.outputs.current_version }}
      - name: Add hashes to release
        run: |
          {
            echo ""
            echo ""
            echo "## Hashes"
            echo ""
            (
              cd ./target/bins/
              for file in *; do
                if [[ -f "$file" ]]; then
                  echo " * $( sha256sum "$file" )"
                fi
              done
            )
          } >> CHANGELOG.md
      - id: release_notes
        run: |
          echo 'release_notes<<EOF' >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - id: git_sha
        run: |
          echo "sha=$(git rev-parse  HEAD)" >> $GITHUB_OUTPUT
      - uses: https://code.forgejo.org/actions/forgejo-release@v2
        with:
          token: ${{ secrets.FJ_TOKEN }}
          sha: ${{ steps.git_sha.outputs.sha }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          direction: upload
          title: Release v${{ needs.release.outputs.current_version }}
          tag: v${{ needs.release.outputs.current_version }}
          url: https://codeberg.org
          release-dir: ./target/bins/
          release-notes: ${{ steps.release_notes.outputs.release_notes }}
      - run: |
          for RPM in ./target/bins/*.rpm ; do
            curl --user "$GITHUB_REPOSITORY_OWNER:$FJ_TOKEN" \
               --upload-file "$RPM" \
               https://codeberg.org/api/packages/$GITHUB_REPOSITORY_OWNER/rpm/${GITHUB_REPOSITORY#*/}/upload
          done
        env:
          FJ_TOKEN: ${{ secrets.FJ_TOKEN }}
      - run: |
          for DEB in ./target/bins/*.deb ; do
            curl --user "$GITHUB_REPOSITORY_OWNER:$FJ_TOKEN" \
               --upload-file "$DEB" \
               https://codeberg.org/api/packages/$GITHUB_REPOSITORY_OWNER/debian/pool/stable/${GITHUB_REPOSITORY#*/}/upload
          done
        env:
          FJ_TOKEN: ${{ secrets.FJ_TOKEN }}
      - run: |
          for APK in ./target/bins/*.apk ; do
            curl --user "$GITHUB_REPOSITORY_OWNER:$FJ_TOKEN" \
               --upload-file "$APK" \
               https://codeberg.org/api/packages/$GITHUB_REPOSITORY_OWNER/alpine/${GITHUB_REPOSITORY#*/}
          done
        env:
          FJ_TOKEN: ${{ secrets.FJ_TOKEN }}
      - run: |
          for ZST in ./target/bins/*.zst ; do
            curl --user "$GITHUB_REPOSITORY_OWNER:$FJ_TOKEN" \
               --header "Content-Type: application/octet-stream" \
               --upload-file "$APK" \
               https://codeberg.org/api/packages/$GITHUB_REPOSITORY_OWNER/arch/${GITHUB_REPOSITORY#*/}
          done
        env:
          FJ_TOKEN: ${{ secrets.FJ_TOKEN }}
