name: Test
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  semver:
    name: "Work out next version number"
    outputs:
      current_version: ${{ steps.current_version.outputs.current_version }}
      next_version: ${{ steps.next_version.outputs.next_version }}
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
        with:
          fetch-depth: 0
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-yq@main
        name: Install yq
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - run: echo current_version="$(yq .package.version Cargo.toml)" >> "$GITHUB_OUTPUT"
        id: current_version
        name: Get current version
      - name: Update version to next
        shell: bash
        if: github.event_name != 'schedule' && github.ref == 'refs/heads/main'
        run: |
          if ! [[ "$(cog bump --auto --skip-ci --dry-run)" == *"No conventional commits"* ]] ; then
            cargo set-version "$(cog bump --auto --skip-ci --dry-run | cut -c2- )"
          fi
      - run: echo next_version="$(yq .package.version Cargo.toml)" >> "$GITHUB_OUTPUT"
        id: next_version
        name: Get next version

  build:
    name: "Build binaries"
    runs-on: docker
    needs:
      - semver
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - uses: https://code.forgejo.org/actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        name: Restore from cache
        with:
          path: target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Update version to next
        shell: bash
        env:
          VERSION: ${{ needs.semver.outputs.next_version }}
        run: cargo set-version "$VERSION"
      - run: just build
        name: Build supported targets
      - name: "Package built assets"
        run: tar -cvf target.tar target
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload built files
        with:
          name: target
          path: target.tar

  lint:
    name: "Lint"
    runs-on: docker
    needs:
      - build
      - semver
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download built assets archive
        with:
          name: target
      - name: "Unpack built assets"
        run: tar -xvf target.tar && rm target.tar
      - name: Update version to next
        shell: bash
        env:
          VERSION: ${{ needs.semver.outputs.next_version }}
        run: cargo set-version "$VERSION"
      - run: just lint

  fix:
    name: "Fix formatting"
    needs:
      - lint
    runs-on: docker
    if: always() && contains(needs.lint.result, 'failure') && github.ref == 'refs/heads/main'
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
        with:
          token: ${{ secrets.FJ_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - run: |
          apt-get update
          apt-get install -y socat
        name: Install socat
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-specdown@main
        name: Install specdown
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download built assets archive
        with:
          name: target
      - name: "Unpack built assets"
        run: tar -xvf target.tar && rm target.tar
      - run: just fmt
        name: Format
      - run: just lint
        name: Lint
      - run: just test
        name: Unit test
      - run: just specdown
        name: Integration test
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/configure-git-user@main
        name: Configure git user
      - name: Commit formatting
        run: |
          git add .
          git commit -m "chore: fix formatting"
          git push origin main

  unit-test:
    name: "Unit test"
    needs:
      - build
      - semver
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download built assets archive
        with:
          name: target
      - name: "Unpack built assets"
        run: tar -xvf target.tar && rm target.tar
      - name: Update version to next
        shell: bash
        env:
          VERSION: ${{ needs.semver.outputs.next_version }}
        run: cargo set-version "$VERSION"
      - run: just test
        name: Test

  integration-test:
    name: "Integration test"
    needs:
      - build
      - semver
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-specdown@main
        name: Install specdown
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-just@main
        name: Install just
      - run: |
          apt-get update
          apt-get install -y socat
        name: Install socat
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download built assets archive
        with:
          name: target
      - name: "Unpack built assets"
        run: tar -xvf target.tar && rm target.tar
      - name: Update version to next
        shell: bash
        env:
          VERSION: ${{ needs.semver.outputs.next_version }}
        run: cargo set-version "$VERSION"
      - run: just specdown
        name: Integration test

  bake-edge-test:
    runs-on: docker
    needs:
      - semver
    name: "Test release build"
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://code.forgejo.org/actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        name: Restore from cache
        with:
          path: target/bake-edge-test
          key: ${{ runner.os }}-bake-edge-test
      - name: Update version to next
        shell: bash
        env:
          VERSION: ${{ needs.semver.outputs.next_version }}
        run: cargo set-version "$VERSION"
      - run: |
          echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - run: mkdir -p target/docker-bake-edge-test
        name: Create docker cache directory
      - name: Extract metadata (tags, labels) for Docker
        id: meta-without-version
        uses: https://code.forgejo.org/docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Bake
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        env:
          GPG_PRIVATE_KEY: ""
          GPG_PASSPHRASE: ""
        with:
          set: |
            *.attest=type=provenance,mode=max
            *.args.VER=${{ needs.semver.outputs.next_version }}
            *.cache-from=type=local,src=target/docker-bake-edge-test
            *.cache-from=type=registry,ref=${{ needs.semver.outputs.current_version }}:edge
            *.cache-to=type=local,dest=target/docker-bake-edge-test,mode=max
          push: false
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: docker,bins
      - shell: bash
        name: "Move binaries to release path"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload docker cache
        with:
          name: docker-bake-cache
          path: target/docker-bake-edge-test

  lint-homebrew-formula:
    name: Lint Homebrew formula
    needs:
      - semver
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - name: Generate formula
        id: formula
        env:
          VERSION: ${{ needs.semver.outputs.current_version }}
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y gettext

          FILE_SHA="$(
            curl --silent \
              --fail-with-body \
              "https://codeberg.org/$GITHUB_REPOSITORY/archive/v$VERSION.tar.gz" \
            | sha256sum --binary \
            | cut -d' ' -f1
          )" envsubst < homebrew/formula.rb.j2 > "$(echo "$GITHUB_REPOSITORY" | cut -d "/" -f2 ).rb"
      - name: Lint formula
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

          test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
          test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bashrc

          brew tap-new homebrew-releaser/test --no-git
          cp -vr fast-conventional.rb $(brew --repository)/Library/Taps/homebrew-releaser/homebrew-test/Formula
          for file in "$(brew --repository)/Library/Taps/homebrew-releaser/homebrew-test/Formula/"*
          do
             brew audit --formula "homebrew-releaser/test/$(basename "${file%.rb}")"
          done
          brew untap homebrew-releaser/test
    runs-on: docker

  release:
    if: github.ref == 'refs/heads/main'
    name: Release
    needs:
      - unit-test
      - integration-test
      - lint
      - bake-edge-test
      - lint-homebrew-formula
    outputs:
      current_version: ${{ steps.release.outputs.current_version }}
      previous_version: ${{ steps.release.outputs.previous_version }}
      changelog: ${{ steps.release.outputs.changelog }}
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@main
        with:
          token: ${{ secrets.FJ_TOKEN }}
          fetch-depth: 0
        name: Checkout
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-rust@main
        name: Install rust
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/configure-git-user@main
        name: Configure git user
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/release-with-cog@main
        name: Release using Cog
        id: release

  bake-edge-build:
    name: Create pre-release assets
    if: needs.release.outputs.current_version == needs.release.outputs.previous_version
    runs-on: docker
    needs:
      - release
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download docker cache
        with:
          name: docker-bake-cache
          path: target/docker-bake-edge-test
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      - name: Login to GitHub Container Registry
        uses: https://code.forgejo.org/docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: codeberg.org
          username: ${{ github.actor }}
          password: ${{ secrets.FJ_TOKEN }}
      - uses: https://code.forgejo.org/actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        name: Restore from cache
        with:
          path: target/bake-edge-release
          key: ${{ runner.os }}-bake-edge-release
      - run: mkdir -p target/docker-bake-edge-release
        name: Create docker cache directory
      - run: echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta-without-version
        uses: https://code.forgejo.org/docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Bake
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          set: |
            *.attest=type=provenance,mode=max
            *.args.VER=${{ needs.release.outputs.current_version }}
            *.cache-from=type=local,src=target/docker-bake-edge-test
            *.cache-from=type=local,src=target/docker-bake-edge-release
            *.cache-from=type=registry,ref=${{ steps.docker.outputs.repository }}:edge
          #            *.cache-to=type=local,dest=target/docker-bake-edge-release,mode=max
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: docker,bins
      - shell: bash
        name: "Move binaries to release path"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload binaries
        with:
          name: built-bins
          path: target/bins/

  bake-release-build:
    name: Create release assets
    if: needs.release.outputs.current_version != needs.release.outputs.previous_version
    needs:
      - release
    runs-on: docker
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ secrets.FJ_TOKEN }}
          ref: v${{ needs.release.outputs.current_version }}
          fetch-depth: 0
      - uses: https://code.forgejo.org/forgejo/download-artifact@d8d0a99033603453ad2255e58720b460a0555e1e # v4
        name: Download docker cache
        with:
          name: docker-bake-cache
          path: target/docker-bake-edge-test
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/install-cocogitto@main
        name: Install cocogitto
      - name: Set up Docker Buildx
        uses: https://code.forgejo.org/docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      - name: Login to GitHub Container Registry
        uses: https://code.forgejo.org/docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: codeberg.org
          username: ${{ github.actor }}
          password: ${{ secrets.FJ_TOKEN }}
      - uses: https://code.forgejo.org/actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        name: Restore from cache
        with:
          path: target/bake-edge-release
          key: ${{ runner.os }}-bake-edge-release
      - run: mkdir -p target/docker-bake-edge-release
        name: Create docker cache directory
      - run: echo "repository=$( echo "codeberg.org/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract versioned metadata (tags, labels) for Docker
        id: meta-with-version
        uses: https://code.forgejo.org/docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest
            type=semver,pattern={{version}},value=v${{ needs.release.outputs.current_version }},prefix=v
            type=semver,pattern={{version}},value=v${{ needs.release.outputs.current_version }}
            type=sha
      - name: Bake
        uses: https://code.forgejo.org/docker/bake-action@511fde2517761e303af548ec9e0ea74a8a100112 # v4
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          set: |
            *.attest=type=provenance,mode=max
            *.args.VER=${{ needs.release.outputs.current_version }}
            *.cache-from=type=local,src=target/docker-bake-edge-test
            *.cache-from=type=local,src=target/docker-bake-edge-release
            *.cache-from=type=registry,ref=${{ steps.docker.outputs.repository }}:edge
          #            *.cache-to=type=local,dest=target/docker-bake-edge-release,mode=max
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-with-version.outputs.bake-file-tags }}
            ${{ steps.meta-with-version.outputs.bake-file-annotations }}
            ${{ steps.meta-with-version.outputs.bake-file-labels }}
          targets: docker,bins
      - shell: bash
        name: "Move binaries to release path"
        run: |
          for I in target/bins/*/*/* ; do
            mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
          done
          find target/bins/ -type d -empty -delete
      - uses: https://codeberg.org/PurpleBooth/common-pipelines/actions/forgejo-release@main
        name: Upload release
        with:
          fj_token: ${{ secrets.FJ_TOKEN }}
          target: target/bins
          tag: v${{ needs.release.outputs.current_version }}
          changelog: ${{ needs.release.outputs.changelog }}
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}

  generate-formula:
    name: Generate Homebrew formula
    if: needs.release.outputs.current_version != needs.release.outputs.previous_version
    needs:
      - release
    steps:
      - uses: https://code.forgejo.org/actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: Checkout
        with:
          ref: v${{ needs.release.outputs.current_version }}
          fetch-depth: 0
      - name: Generate formula
        id: generate-formula
        env:
          VERSION: ${{ needs.release.outputs.current_version }}
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y gettext

          FILE_SHA="$(
            curl --silent \
              --fail-with-body \
              "https://codeberg.org/$GITHUB_REPOSITORY/archive/v$VERSION.tar.gz" \
            | sha256sum --binary \
            | cut -d' ' -f1
          )" envsubst < homebrew/formula.rb.j2 > "$(echo "$GITHUB_REPOSITORY" | cut -d "/" -f2 ).rb"
          echo "path=$(echo "$GITHUB_REPOSITORY" | cut -d "/" -f2 ).rb" >> "$GITHUB_OUTPUT"
      - uses: https://code.forgejo.org/forgejo/upload-artifact@16871d9e8cfcf27ff31822cac382bbb5450f1e1e # v4
        name: Upload built files
        with:
          name: homebrew-formula
          path: ${{ steps.generate-formula.outputs.test }}
    runs-on: docker
