ARG BUILDKIT_SBOM_SCAN_CONTEXT=true
FROM --platform=$BUILDPLATFORM tonistiigi/xx@sha256:923441d7c25f1e2eb5789f82d987693c47b8ed987c4ab3b075d6ed2b5d6779a3 AS xx
ARG TARGETPLATFORM

FROM --platform=$BUILDPLATFORM rust:alpine@sha256:bea885d2711087e67a9f7a7cd1a164976f4c35389478512af170730014d2452a AS builder
ARG BUILDKIT_SBOM_SCAN_CONTEXT=true
RUN apk add clang lld openssl-dev curl bash
# copy xx scripts to your build stage
COPY --from=xx / /
ARG TARGETPLATFORM

RUN xx-apk add --no-cache musl-dev zlib-dev zlib-static openssl-dev openssl-libs-static pkgconfig alpine-sdk

WORKDIR /app
RUN cargo new --lib fast-conventional
WORKDIR /app/fast-conventional
COPY Cargo.toml ./Cargo.toml
COPY Cargo.lock ./Cargo.lock
RUN xx-cargo build --release --target-dir ./build
COPY . ./
RUN xx-cargo build --release --target-dir ./build && \
    xx-verify --static "./build/$(xx-cargo --print-target-triple)/release/fast-conventional" && \
    cp -v  "./build/$(xx-cargo --print-target-triple)/release/fast-conventional" "./build/fast-conventional"
RUN addgroup -g 568 nonroot
RUN adduser -u 568 -G nonroot -D nonroot
FROM scratch
COPY --from=builder "/app/fast-conventional/build/fast-conventional" /
COPY --from=builder /etc/group /etc/group
COPY --from=builder /etc/passwd /etc/passwd
RUN ["/fast-conventional", "--version"]
ENTRYPOINT ["/fast-conventional"]
